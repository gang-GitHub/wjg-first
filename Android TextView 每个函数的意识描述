TextView extends View implements ViewTreeObserver.OnPreDrawListener

java.lang.Object
android.view.View
android.widget.TextView
已知直接子类
Button, CheckedTextView, Chronometer, DigitalClock, EditText, TextClock
已知间接子类
AutoCompleteTextView, CheckBox, CompoundButton, ExtractEditText, MultiAutoCompleteTextView, RadioButton, Switch, ToggleButton
类概述

显示文本并提供允许编辑的选项. TextView 是完整的文本编辑器，只是基类设置为不可编辑； 配置为可编辑的视图，参见 EditText 子类。

XML 属性

参见 TextView Attributes、 View Attributes

概述

嵌套类
enum	TextView.BufferType	
interface	TextView.OnEditorActionListener	定义了当编辑器执行动作时的回调函数的接口. 
class	TextView.SavedState	User interface state that is stored by TextView for implementing onSaveInstanceState(). 
XML 属性
属性名称	关联方法	描述
android:autoLink	setAutoLinkMask(int)	控制是否自动查找并转换 URL、邮箱地址等链接为可点击链接.默认值为"none"，禁止该属性. 
android:autoText	setKeyListener(KeyListener)	如果设置，这表示该 TextView 的文本输入法可以自动更正常见拼写错误. 
android:bufferType	setText(CharSequence,TextView.BufferType)	决定 getText() 方法返回值的种类.默认值为 "normal".注意，EditText 和 LogTextBox 总是返回 Editable，及时你指定更低的基本也无济于事. 
android:capitalize	setKeyListener(KeyListener)	如果设置该属性，则指定该 TextView 的文本输入法可以自动改变用户输入的字母为大写. 
android:cursorVisible	setCursorVisible(boolean)	使光标可见（默认）或隐藏. 
android:digits	setKeyListener(KeyListener)	如果设置，则指定该 TextView 使用数字输入法，只接受指定的字符. 
android:drawableBottom	setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)	在文本下方显示可绘制对象. 
android:drawableEnd	setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)	文本结束处的可绘制对象. 
android:drawableLeft	setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)	在文本左侧显示可绘制对象. 
android:drawablePadding	setCompoundDrawablePadding(int)	文本和可绘制对象的间距. 
android:drawableRight	setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)	在文本右侧显示可绘制对象. 
android:drawableStart	setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)	文本起始处的可绘制对象. 
android:drawableTop	setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)	在文本上方显示可绘制对象. 
android:editable	如果设置，则指定该 TextView 有输入法，如果没有特殊指定，其为文本输入状态. 
android:editorExtras	setInputExtras(int)	指向 XML 资源，为输入法的特殊实现提供附加数据.只是当输入法启动时将资源 放入 EditorInfo.extras 字段. 
android:ellipsize	setEllipsize(TextUtils.TruncateAt)	该值为真时，如果文字长度超过视图宽度，文字不会在中途被截断， 而是省略其中一部分.为了将文本作为一个整体显示在一行中， 你可能经常使用横向滚动条或者 singleLine 属性， 现在你也可以使用本属性，它还允许多行. 
android:ems	setEms(int)	使 TextView 精确匹配指定个数的字符宽度. 
android:fontFamily	setTypeface(Typeface)	Font family (named by string) for the text. 
android:freezesText	setFreezesText(boolean)	如果设置，则文本视图会保持完整的文本内容，以及象当前光标位置这样的附近信息. 
android:gravity	setGravity(int)	指定当显示的文本比视图小时，横向和纵向的对齐方式. 
android:height	setHeight(int)	精确的设置 TextView 的高度.使用布局参数也可以达到相同效果. 
android:hint	setHint(int)	当文本为空时显示的提示信息. 
android:imeActionId	setImeActionLabel(CharSequence,int)	当输入法连接到文本视图时，提供用于 EditorInfo.actionId 的值. 
android:imeActionLabel	setImeActionLabel(CharSequence,int)	当输入法连接到文本视图时，提供用于 EditorInfo.actionLabel 的值. 
android:imeOptions	setImeOptions(int)	附近特性，可用于启动输入法与编辑器的关联，以提高你应用程序的集成效果. 
android:includeFontPadding	setIncludeFontPadding(boolean)	为上标和下标留出足够的空间，以取代字体上下标.默认为真. 
android:inputMethod	setKeyListener(KeyListener)	如果设置，即指定 TextView 使用指定的输入法（使用完全修饰类名）.
android:inputType	setRawInputType(int)	文本域中可放置的数据类型，用于帮助输入法决定如何让用户输入文本. 
android:lineSpacingExtra	setLineSpacing(float,float)	文本行间距. 
android:lineSpacingMultiplier	setLineSpacing(float,float)	用倍数指定的行间距. 
android:lines	setLines(int)	使 TextView 精确匹配指定行数的高度. 
android:linksClickable	setLinksClickable(boolean)	如果设为假，即使指定的 autoLink 属性正确识别出了链接，点击也不会发生任何动作. 
android:marqueeRepeatLimit	setMarqueeRepeatLimit(int)	字幕动画的重复次数.仅应用于启动字母动画的 TextView. 
android:maxEms	setMaxEms(int)	使 TextView 的最大宽度为指定个数的字符宽度. 
android:maxHeight	setMaxHeight(int)	设置 TextView 的最大高度. 
android:maxLength	setFilters(InputFilter)	设置输入过滤器，限制输入的文本最大长度为指定值. 
android:maxLines	setMaxLines(int)	使 TextView 的最大高度为指定行数的高度. 
android:maxWidth	setMaxWidth(int)	设置 TextView 的最大宽度. 
android:minEms	setMinEms(int)	使 TextView 的最小宽度为指定个数的字符宽度. 
android:minHeight	setMinHeight(int)	设置 TextView 的最小高度. 
android:minLines	setMinLines(int)	使 TextView 的最小高度为指定行数的高度. 
android:minWidth	setMinWidth(int)	设置 TextView 的最小宽度. 
android:numeric	setKeyListener(KeyListener)	如果设置，指定 TextView 使用数值输入法.默认值为假. 
android:password	setTransformationMethod(TransformationMethod)	是否将文本域中的字符显示为代表密码的圆点. 
android:phoneNumber	setKeyListener(KeyListener)	如果设置，则指定 TextView 使用电话号码输入法.默认为假. 
android:privateImeOptions	setPrivateImeOptions(String)	附加的内容类型，用于描述文本视图支持的输入法的私有实现. 
android:scrollHorizontally	setHorizontallyScrolling(boolean)	是否允许文本比视图宽（允许横向滚动）. 
android:selectAllOnFocus	setSelectAllOnFocus(boolean)	If the text is selectable, select it all when the view takes focus. 
android:shadowColor	setShadowLayer(float,float,float,int)	在文本后面显示指定颜色的阴影. 
android:shadowDx	setShadowLayer(float,float,float,int)	阴影横向偏移量. 
android:shadowDy	setShadowLayer(float,float,float,int)	阴影纵向偏移量. 
android:shadowRadius	setShadowLayer(float,float,float,int)	设置阴影的范围. 
android:singleLine	setTransformationMethod(TransformationMethod)	Constrains the text to a single horizontally scrolling line instead of letting it wrap onto multiple lines, and advances focus instead of inserting a newline when you press the enter key. 
android:text	setText(CharSequence,TextView.BufferType)	用于显示的文本
Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character. 
android:textAllCaps	setAllCaps(boolean)	全部使用大写字母来呈现文本. 
android:textAppearance	基本的文字颜色、字体、大小和风格. 
android:textColor	setTextColor(int)	文本颜色
May be a reference to another resource, in the form "@[+][package:]type:name" or to a theme attribute in the form "?[package:][type:]name". 
android:textColorHighlight	setHighlightColor(int)	选中文本的高亮部分的颜色. 
android:textColorHint	setHintTextColor(int)	提示信息的文字颜色. 
android:textColorLink	setLinkTextColor(int)	超链接的文字颜色. 
android:textIsSelectable	isTextSelectable()	指示非可编辑文本可以选择. 
android:textScaleX	setTextScaleX(float)	设置文本的横向缩放因子. 
android:textSize	setTextSize(int,float)	文字的大小.推荐以“sp（可缩放像素）”为单位来设置该值（比如 15sp）. 
android:textStyle	setTypeface(Typeface)	文字风格（粗体、斜体、粗斜体等）. 
android:typeface	setTypeface(Typeface)	字体名称（楷体、宋体、仿宋、黑体等）. 
android:width	setWidth(int)	精确的设置 TextView 的宽度.使用布局参数也可以达到相同效果. 
[展开]
继承 XML 属性
继承自 class android.view.View
[展开]
继承常量
继承自 class android.view.View
[展开]
继承字段
继承自 class android.view.View
公有构造函数
TextView(Context context)
TextView(Context context, AttributeSet attrs)
TextView(Context context, AttributeSet attrs, int defStyle)
公有方法
void	addTextChangedListener(TextWatcher watcher)
Adds a TextWatcher to the list of those whose methods are called whenever this TextView's text changes.
final void	append(CharSequence text)
Convenience method: Append the specified text to the TextView's display buffer, upgrading it to BufferType.EDITABLE if it was not already editable.
void	append(CharSequence text, int start, int end)
Convenience method: Append the specified text slice to the TextView's display buffer, upgrading it to BufferType.EDITABLE if it was not already editable.
void	beginBatchEdit()
boolean	bringPointIntoView(int offset)
Move the point, specified by the offset, into the view if it is needed.
void	cancelLongPress()
Cancels a pending long press.
void	clearComposingText()
Use BaseInputConnection.removeComposingSpans() to remove any IME composing state from this text view.
void	computeScroll()
由父视图调用，用于通知子视图在必要时更新 mScrollX 和 mScrollY 的值.
void	debug(int depth)
Prints information about this view in the log output, with the tag VIEW_LOG_TAG.
boolean	didTouchFocusSelect()
Returns true, only while processing a touch gesture, if the initial touch down event caused focus to move to the text view and as a result its selection changed.
void	endBatchEdit()
boolean	extractText(ExtractedTextRequest request, ExtractedText outText)
If this TextView contains editable content, extract a portion of it based on the information in request in to outText.
void	findViewsWithText(ArrayList outViews, CharSequence searched, int flags)
Finds the Views that contain given text.
final int	getAutoLinkMask()
返回文本的自动链接掩码.
int	getBaseline()
返回小部件顶端到文本基线的偏移量.如果小部件不支持基线对齐，该方法返回 -1.
int	getCompoundDrawablePadding()
返回文本和组件的可绘制对象之间的边距。
Drawable[]	getCompoundDrawables()
依次返回左上右下边的可绘制对象。
Drawable[]	getCompoundDrawablesRelative()
Returns drawables for the start, top, end, and bottom borders.
int	getCompoundPaddingBottom()
返回该视图的下边距，包含底部可绘制对象的空间，当其存在时。
int	getCompoundPaddingEnd()
Returns the end padding of the view, plus space for the end Drawable if any.
int	getCompoundPaddingLeft()
返回该视图的左边距，包含左部可绘制对象的空间，当其存在时。
int	getCompoundPaddingRight()
返回该视图的右边距，包含右部可绘制对象的空间，当其存在时。
int	getCompoundPaddingStart()
Returns the start padding of the view, plus space for the start Drawable if any.
int	getCompoundPaddingTop()
返回该视图的上边距，包含顶部可绘制对象的空间，当其存在时。
final int	getCurrentHintTextColor()
返回当前用于绘制提示文本的颜色。
final int	getCurrentTextColor()
返回当前设置的普通文本的颜色。
ActionMode.Callback	getCustomSelectionActionModeCallback()
Retrieves the value set in setCustomSelectionActionModeCallback(ActionMode.Callback).
Editable	getEditableText()
返回 TextView 显示的作为可编辑对象的文本内容.
TextUtils.TruncateAt	getEllipsize()
Returns where, if anywhere, words that are longer than the view is wide should be ellipsized.
CharSequence	getError()
Returns the error message that was set to be displayed with setError(CharSequence), or null if no error was set or if it the error was cleared by the widget after user input.
int	getExtendedPaddingBottom()
返回视图的扩展底边距，包括底部可绘制对象（如果存在）和用于显示最大行数以上内容的扩展空间.
int	getExtendedPaddingTop()
返回视图的扩展顶边距，包括顶部可绘制对象（如果存在）和用于显示最大行数以上内容的扩展空间.
InputFilter[]	getFilters()
Returns the current list of input filters.
void	getFocusedRect(Rect r)
在视图拥有焦点时，用户将焦点移向其他视图，可以使用该方法取得下一个视图的 矩形填充区域.
boolean	getFreezesText()
Return whether this text view is including its entire text contents in frozen icicles.
int	getGravity()
返回 TextView 的横纵向对齐方式。
int	getHighlightColor()
CharSequence	getHint()
Returns the hint that is displayed when the text of the TextView is empty.
final ColorStateList	getHintTextColors()
int	getImeActionId()
Get the IME action ID previous set with setImeActionLabel(CharSequence, int).
CharSequence	getImeActionLabel()
Get the IME action label previous set with setImeActionLabel(CharSequence, int).
int	getImeOptions()
Get the type of the IME editor.
boolean	getIncludeFontPadding()
Gets whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent.
Bundle	getInputExtras(boolean create)
Retrieve the input extras currently associated with the text view, which can be viewed as well as modified.
int	getInputType()
Get the type of the editable content.
final KeyListener	getKeyListener()
final Layout	getLayout()
int	getLineBounds(int line, Rect bounds)
Return the baseline for the specified line (0...getLineCount() - 1) If bounds is not null, return the top, left, right, bottom extents of the specified line in it.
int	getLineCount()
Return the number of lines of text, or 0 if the internal Layout has not been built.
int	getLineHeight()
float	getLineSpacingExtra()
Gets the line spacing extra space
float	getLineSpacingMultiplier()
Gets the line spacing multiplier
final ColorStateList	getLinkTextColors()
final boolean	getLinksClickable()
返回当 setAutoLinkMask(int) 为非零，并且在 setText(char[], int, int) 中检测到链接时， 是否自动将移动方法设置为 LinkMovementMethod。默认为真。
int	getMarqueeRepeatLimit()
Gets the number of times the marquee animation is repeated.
int	getMaxEms()
int	getMaxHeight()
int	getMaxLines()
int	getMaxWidth()
int	getMinEms()
int	getMinHeight()
int	getMinLines()
int	getMinWidth()
final MovementMethod	getMovementMethod()
int	getOffsetForPosition(float x, float y)
Get the character offset closest to the specified absolute position.
TextPaint	getPaint()
int	getPaintFlags()
String	getPrivateImeOptions()
Get the private type of the content.
int	getSelectionEnd()
Convenience for getSelectionEnd(CharSequence).
int	getSelectionStart()
Convenience for getSelectionStart(CharSequence).
int	getShadowColor()
float	getShadowDx()
float	getShadowDy()
float	getShadowRadius()
Gets the radius of the shadow layer.
CharSequence	getText()
返回 TextView 显示的文本.如果使用 BufferType.SPANNABLE 或 BufferType.EDITABLE 参数调用 setText() 方法，你可以将本方法的返回值分别转换为 Spannable 或 Editable.
static int	getTextColor(Context context, TypedArray attrs, int def)
Returns the default color from the TextView_textColor attribute from the AttributeSet, if set, or the default color from the TextAppearance_textColor from the TextView_textAppearance attribute, if TextView_textColor was not set directly.
final ColorStateList	getTextColors()
Gets the text colors for the different states (normal, selected, focused) of the TextView.
static ColorStateList	getTextColors(Context context, TypedArray attrs)
Returns the TextView_textColor attribute from the Resources.StyledAttributes, if set, or the TextAppearance_textColor from the TextView_textAppearance attribute, if TextView_textColor was not set directly.
Locale	getTextLocale()
Get the default Locale of the text in this TextView.
float	getTextScaleX()
float	getTextSize()
int	getTotalPaddingBottom()
返回视图的底边距合计，包括底部可绘制对象（如果存在）、 用于显示超过最大行数的扩展空间、纵向对齐的偏移量等等。
int	getTotalPaddingEnd()
返回视图终止边距合计，包括终止可绘制对象（如果存在）.
int	getTotalPaddingLeft()
返回视图左边距合计，包括左侧的可绘制对象（如果存在）.
int	getTotalPaddingRight()
返回视图右边距合计，包括右侧的可绘制对象（如果存在）.
int	getTotalPaddingStart()
返回视图起始边距合计，包括起始可绘制对象（如果存在）.
int	getTotalPaddingTop()
返回视图的顶边距合计，包括顶部可绘制对象（如果存在）、 用于显示超过最大行数的扩展空间、纵向对齐的偏移量等等。
final TransformationMethod	getTransformationMethod()
Typeface	getTypeface()
URLSpan[]	getUrls()
如果有，则返回（通过Linkify 或其他方法）关联到文本的 URLSpans 的列表。
boolean	hasOverlappingRendering()
Returns whether this View has content which overlaps.
boolean	hasSelection()
Return true iff there is a selection inside this text view.
void	invalidateDrawable(Drawable drawable)
使指定的可绘制对象失效。
boolean	isCursorVisible()
boolean	isInputMethodTarget()
Returns whether this text view is a current input method target.
boolean	isSuggestionsEnabled()
Return whether or not suggestions are enabled on this TextView.
boolean	isTextSelectable()
When a TextView is used to display a useful piece of information to the user (such as a contact's address), it should be made selectable, so that the user can select and copy this content.
void	jumpDrawablesToCurrentState()
在与该视图相关的所有可绘制对象上，调用 Drawable.jumpToCurrentState() 方法.
int	length()
返回由该 TextView 管理的文本长度（字符数）。
boolean	moveCursorToVisibleOffset()
Move the cursor, if needed, so that it is at an offset that is visible to the user.
void	onBeginBatchEdit()
Called by the framework in response to a request to begin a batch of edit operations through a call to link beginBatchEdit().
boolean	onCheckIsTextEditor()
Check whether the called view is a text editor, in which case it would make sense to automatically display a soft input window for it.
void	onCommitCompletion(CompletionInfo text)
Called by the framework in response to a text completion from the current input method, provided by it calling InputConnection.commitCompletion().
void	onCommitCorrection(CorrectionInfo info)
Called by the framework in response to a text auto-correction (such as fixing a typo using a a dictionnary) from the current input method, provided by it calling commitCorrection(CorrectionInfo) InputConnection.commitCorrection()}.
InputConnection	onCreateInputConnection(EditorInfo outAttrs)
Create a new InputConnection for an InputMethod to interact with the view.
boolean	onDragEvent(DragEvent event)
Handles drag events sent by the system following a call to startDrag().
void	onEditorAction(int actionCode)
Called when an attached input method calls InputConnection.performEditorAction() for this text view.
void	onEndBatchEdit()
Called by the framework in response to a request to end a batch of edit operations through a call to link endBatchEdit().
void	onFinishTemporaryDetach()
Called after onStartTemporaryDetach() when the container is done changing the view.
boolean	onGenericMotionEvent(MotionEvent event)
实现该方法来处理触屏事件.
void	onInitializeAccessibilityEvent(AccessibilityEvent event)
使用作为事件源的该视图的信息初始化 AccessibilityEvent 事件.换句话说， 该视图状态的变化是触发辅助事件的源头.
void	onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info)
使用该视图的信息初始化 AccessibilityNodeInfo 对象.
boolean	onKeyDown(int keyCode, KeyEvent event)
KeyEvent.Callback.onKeyDown() 的默认实现:如果该视图可用并可点击，当释放 KEYCODE_DPAD_CENTER 或 KEYCODE_ENTER 时执行按下动作.
boolean	onKeyMultiple(int keyCode, int repeatCount, KeyEvent event)
KeyEvent.Callback.onKeyMultiple() 的默认实现：不处理该事件，总是返回假.
boolean	onKeyPreIme(int keyCode, KeyEvent event)
Handle a key event before it is processed by any input method associated with the view hierarchy.
boolean	onKeyShortcut(int keyCode, KeyEvent event)
Called on the focused view when a key shortcut event is not handled.
boolean	onKeyUp(int keyCode, KeyEvent event)
KeyEvent.Callback.onKeyUp() 的默认实现：如果该视图可用并可点击，当释放 KEYCODE_DPAD_CENTER 或 KEYCODE_ENTER 时执行按下动作.
void	onPopulateAccessibilityEvent(AccessibilityEvent event)
由 dispatchPopulateAccessibilityEvent(AccessibilityEvent) 调用， 使该视图有机会使用其文本内容设置辅助事件.该事件内可以编辑文本内容以及一般在 onInitializeAccessibilityEvent(AccessibilityEvent) 事件中编辑的任何事件属性.
boolean	onPreDraw()
即将绘制视图树时执行的回调函数.这时所有的视图都测量完成并确定了框架.
boolean	onPrivateIMECommand(String action, Bundle data)
Called by the framework in response to a private command from the current method, provided by it calling InputConnection.performPrivateCommand().
void	onRestoreInstanceState(Parcelable state)
允许视图重新应用之前由 onSaveInstanceState() 保存的内部状态的回调函数.
void	onRtlPropertiesChanged(int layoutDirection)
Called when any RTL property (layout direction or text direction or text alignment) has been changed.
Parcelable	onSaveInstanceState()
允许视图保存其内部状态的回调函数，以便于之后使用相同状态创建新实例.
void	onScreenStateChanged(int screenState)
This method is called whenever the state of the screen this view is attached to changes.
void	onStartTemporaryDetach()
This is called when a container is going to temporarily detach a child, with ViewGroup.detachViewFromParent.
boolean	onTextContextMenuItem(int id)
Called when a context menu option for the text view is selected.
boolean	onTouchEvent(MotionEvent event)
实现该方法可以处理触屏动作事件.
boolean	onTrackballEvent(MotionEvent event)
实现该方法用于处理轨迹球动作事件.相对于上次使用 MotionEvent.getX() 和 MotionEvent.getY() 取得的位置的偏移量.
void	onWindowFocusChanged(boolean hasWindowFocus)
包含该视图的窗体获得或失去焦点时调用该函数.
boolean	performLongClick()
Call this view's OnLongClickListener, if it is defined.
void	removeTextChangedListener(TextWatcher watcher)
Removes the specified TextWatcher from the list of those whose methods are called whenever this TextView's text changes.
void	sendAccessibilityEvent(int eventType)
发送指定类型的辅助事件.如果辅助功能无效，该方法没有影响.默认实现会首先调用 onInitializeAccessibilityEvent(AccessibilityEvent)方法， 要求填充关于事件源（该视图）的信息；之后调用 dispatchPopulateAccessibilityEvent(AccessibilityEvent) 方法， 要求填充事件源包含的后代视图的文本信息；最后调用其父类的 requestSendAccessibilityEvent(View, AccessibilityEvent) 方法，请求发送事件到各个监听器.
void	setAllCaps(boolean allCaps)
Sets the properties of this field to transform input to ALL CAPS display.
final void	setAutoLinkMask(int mask)
设置文本的自动链接掩码.
void	setCompoundDrawablePadding(int pad)
设置文本和组件的可绘制对象之间的边距。
void	setCompoundDrawables(Drawable left, Drawable top, Drawable right, Drawable bottom)
设置出现在文本的上下左右的可绘制对象.
void	setCompoundDrawablesRelative(Drawable start, Drawable top, Drawable end, Drawable bottom)
Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text.
void	setCompoundDrawablesRelativeWithIntrinsicBounds(Drawable start, Drawable top, Drawable end, Drawable bottom)
Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text.
void	setCompoundDrawablesRelativeWithIntrinsicBounds(int start, int top, int end, int bottom)
Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text.
void	setCompoundDrawablesWithIntrinsicBounds(Drawable left, Drawable top, Drawable right, Drawable bottom)
设置出现在文本的上下左右的可绘制对象.
void	setCompoundDrawablesWithIntrinsicBounds(int left, int top, int right, int bottom)
设置出现在文本的上下左右的可绘制对象.
void	setCursorVisible(boolean visible)
Set whether the cursor is visible.
void	setCustomSelectionActionModeCallback(ActionMode.Callback actionModeCallback)
If provided, this ActionMode.Callback will be used to create the ActionMode when text selection is initiated in this View.
final void	setEditableFactory(Editable.Factory factory)
Sets the Factory used to create new Editables.
void	setEllipsize(TextUtils.TruncateAt where)
指定当文字的长度超过视图宽度时用何种方式来取代简单的中途截断文本.
void	setEms(int ems)
Makes the TextView exactly this many ems wide
void	setEnabled(boolean enabled)
设置视图的可用状态.由子类决定视图的各可用状态如何显示.
void	setError(CharSequence error)
Sets the right-hand compound drawable of the TextView to the "error" icon and sets an error message that will be displayed in a popup when the TextView has focus.
void	setError(CharSequence error, Drawable icon)
Sets the right-hand compound drawable of the TextView to the specified icon and sets an error message that will be displayed in a popup when the TextView has focus.
void	setExtractedText(ExtractedText text)
Apply to this text view the given extracted text, as previously returned by extractText(ExtractedTextRequest, ExtractedText).
void	setFilters(InputFilter[] filters)
Sets the list of input filters that will be used if the buffer is Editable.
void	setFreezesText(boolean freezesText)
Control whether this text view saves its entire text contents when freezing to an icicle, in addition to dynamic state such as cursor position.
void	setGravity(int gravity)
设置当 TextView 中有超过显示文本需要的剩余空间时，横向和纵向的对齐方式。
void	setHeight(int pixels)
Makes the TextView exactly this many pixels tall.
void	setHighlightColor(int color)
设置用于显示选中高亮的颜色.
final void	setHint(CharSequence hint)
Sets the text to be displayed when the text of the TextView is empty.
final void	setHint(int resid)
Sets the text to be displayed when the text of the TextView is empty, from a resource.
final void	setHintTextColor(ColorStateList colors)
设置提示文本的颜色。
final void	setHintTextColor(int color)
Sets the color of the hint text for all the states (disabled, focussed, selected...) of this TextView.
void	setHorizontallyScrolling(boolean whether)
设置是否允许文本比视图宽。如果为假，文本会折行以适应视图的宽度。
void	setImeActionLabel(CharSequence label, int actionId)
Change the custom IME action associated with the text view, which will be reported to an IME with actionLabel and actionId when it has focus.
void	setImeOptions(int imeOptions)
Change the editor type integer associated with the text view, which will be reported to an IME with imeOptions when it has focus.
void	setIncludeFontPadding(boolean includepad)
Set whether the TextView includes extra top and bottom padding to make room for accents that go above the normal ascent and descent.
void	setInputExtras(int xmlResId)
Set the extra input data of the text, which is the TextBoxAttribute.extras Bundle that will be filled in when creating an input connection.
void	setInputType(int type)
Set the type of the content with a constant as defined for inputType.
void	setKeyListener(KeyListener input)
设置用于该 TextView 的键盘监听器.
void	setLineSpacing(float add, float mult)
Sets line spacing for this TextView.
void	setLines(int lines)
Makes the TextView exactly this many lines tall.
final void	setLinkTextColor(ColorStateList colors)
设置文本中链接的颜色。
final void	setLinkTextColor(int color)
设置文本中链接的颜色。
final void	setLinksClickable(boolean whether)
设置当 setAutoLinkMask(int) 为非零，并且在 setText(char[], int, int) 中检测到链接时， 是否自动将移动方法设置为 LinkMovementMethod。默认为真。
void	setMarqueeRepeatLimit(int marqueeLimit)
Sets how many times to repeat the marquee animation.
void	setMaxEms(int maxems)
Makes the TextView at most this many ems wide
void	setMaxHeight(int maxHeight)
设置 TextView 最多不能显示超过多少像素的高度。该方法与 setMaxLines(int) 方法相互排斥。
void	setMaxLines(int maxlines)
设置 TextView 最多不能显示超过多少行的高度。
void	setMaxWidth(int maxpixels)
Makes the TextView at most this many pixels wide
void	setMinEms(int minems)
Makes the TextView at least this many ems wide
void	setMinHeight(int minHeight)
设置 TextView 的最小高度为指定像素数。
void	setMinLines(int minlines)
使 TextView 至少为能显示指定行数的高度。
void	setMinWidth(int minpixels)
Makes the TextView at least this many pixels wide
final void	setMovementMethod(MovementMethod movement)
设置该 TextView 使用的移动方法（方向键处理器）.
void	setOnEditorActionListener(TextView.OnEditorActionListener l)
Set a special listener to be called when an action is performed on the text view.
void	setPadding(int left, int top, int right, int bottom)
设置内边距.视图可能会根据滚动条的样式和可视性，增加一些必要的用于显示滚动条的空间.
void	setPaddingRelative(int start, int top, int end, int bottom)
Sets the relative padding.
void	setPaintFlags(int flags)
设置用于显示文本的画笔的标志位，如果与旧标志不同则重新绘制。
void	setPrivateImeOptions(String type)
Set the private content type of the text, which is the EditorInfo.privateImeOptions field that will be filled in when creating an input connection.
void	setRawInputType(int type)
Directly change the content type integer of the text view, without modifying any other state.
void	setScroller(Scroller s)
void	setSelectAllOnFocus(boolean selectAllOnFocus)
Set the TextView so that when it takes focus, all the text is selected.
void	setSelected(boolean selected)
改变视图的选中状态。视图有选中和未选中两个状态。注意，选择状态不同于焦点。
void	setShadowLayer(float radius, float dx, float dy, int color)
Gives the text a shadow of the specified radius and color, the specified distance from its normal position.
void	setSingleLine()
Sets the properties of this field (lines, horizontally scrolling, transformation method) to be for a single-line input.
void	setSingleLine(boolean singleLine)
If true, sets the properties of this field (number of lines, horizontally scrolling, transformation method) to be for a single-line input; if false, restores these to the default conditions.
final void	setSpannableFactory(Spannable.Factory factory)
Sets the Factory used to create new Spannables.
final void	setText(int resid)
final void	setText(char[] text, int start, int len)
Sets the TextView to display the specified slice of the specified char array.
final void	setText(int resid, TextView.BufferType type)
final void	setText(CharSequence text)
Sets the string value of the TextView.
void	setText(CharSequence text, TextView.BufferType type)
设置该 TextView 显示的文本（参见 setText(CharSequence)） 以及是否可以保存在 styleable/spannable 缓存中，以及是否可以编辑.
void	setTextAppearance(Context context, int resid)
根据指定的 TextAppearance 资源设置文本颜色、大小、风格、默认颜色和高亮颜色。
void	setTextColor(ColorStateList colors)
设置文本颜色。
void	setTextColor(int color)
为所有状态（正常、选中、有焦点）设置文本颜色.
void	setTextIsSelectable(boolean selectable)
Sets whether or not (default) the content of this view is selectable by the user.
final void	setTextKeepState(CharSequence text)
Like setText(CharSequence), except that the cursor position (if any) is retained in the new text.
final void	setTextKeepState(CharSequence text, TextView.BufferType type)
Like setText(CharSequence, android.widget.TextView.BufferType), except that the cursor position (if any) is retained in the new text.
void	setTextLocale(Locale locale)
Set the default Locale of the text in this TextView to the given value.
void	setTextScaleX(float size)
设置文本横向拉伸的程度。
void	setTextSize(float size)
设置默认文本大小为给定值，单位为"缩放像素".
void	setTextSize(int unit, float size)
使用给定单位和值来设置默认字体的大小.
final void	setTransformationMethod(TransformationMethod method)
设置应用到该 TextView 的，显示文本时的变换方法。
void	setTypeface(Typeface tf, int style)
设置显示文本的字形和风格，如果你指定的风格不包含所有的文字类型， 该函数会启用绘制时的模拟粗体和斜体位.
void	setTypeface(Typeface tf)
设置文本显示的字体及风格.
void	setWidth(int pixels)
Makes the TextView exactly this many pixels wide.
保护方法
int	computeHorizontalScrollRange()
计算滚动条水平方向上的滚动范围.
int	computeVerticalScrollExtent()
计算滚动条把手在纵向滚动范围内占用的幅度.该值用于计算滚动条把手在滚动条滑道中的长度.
int	computeVerticalScrollRange()
计算滚动条代表的纵向范围.
void	drawableStateChanged()
在视图状态的变化影响到所显示可绘制对象的状态时调用该方法.
int	getBottomPaddingOffset()
底部淡出区域的扩展量.
boolean	getDefaultEditable()
子类覆盖该方法，已使其可以在默认 XML 选项未指定可编辑时设置 KeyListener.
MovementMethod	getDefaultMovementMethod()
子类覆盖该方法，以指定默认动作方法.
float	getLeftFadingEdgeStrength()
返回左渐变边缘的强度或密集度.强度的值介于0.0（无渐变）到1.0（全渐变）之间.
int	getLeftPaddingOffset()
左侧淡出区域的扩展量.
float	getRightFadingEdgeStrength()
返回右渐变边缘的强度或密集度.强度的值介于0.0（无渐变）到1.0（全渐变）之间.
int	getRightPaddingOffset()
右侧淡出区域的扩展量.
int	getTopPaddingOffset()
顶部淡出区域的扩展量.
boolean	isPaddingOffsetRequired()
如果视图在他的内边距中绘制内容，并且允许边缘淡出，那么它需要支持内边距偏移.
void	onAttachedToWindow()
当视图关联到窗口时调用该方法.在这个时点，视图拥有表面，即将开始绘制.
int[]	onCreateDrawableState(int extraSpace)
为当前视图生成新的 Drawable 状态时发生.
void	onDetachedFromWindow()
将视图从屏幕上分离的时候调用该方法.这个时点视图已经不具有可绘制部分.
void	onDraw(Canvas canvas)
实现该方法自己绘制视图.
void	onFocusChanged(boolean focused, int direction, Rect previouslyFocusedRect)
当视图的焦点改变时调用.由定向导航导致的焦点变更时， direction 和 previouslyFocusedRect 提供了焦点是从那里来的进一步信息.
void	onLayout(boolean changed, int left, int top, int right, int bottom)
该视图设置其子视图的大小及位置时调用.派生类可以重写此方法，并为其子类布局.
void	onMeasure(int widthMeasureSpec, int heightMeasureSpec)
评估视图及其内容，以决定其宽度和高度.此方法由 measure(int, int) 调用，子类可以重载以提供更精确、更有效率的衡量其内容尺寸的方法.
void	onScrollChanged(int horiz, int vert, int oldHoriz, int oldVert)
This is called in response to an internal scroll in this view (i.e., the view scrolled its own contents).
void	onSelectionChanged(int selStart, int selEnd)
This method is called when the selection has changed, in case any subclasses would like to know.
void	onTextChanged(CharSequence text, int start, int lengthBefore, int lengthAfter)
This method is called when the text is changed, in case any subclasses would like to know.
void	onVisibilityChanged(View changedView, int visibility)
Called when the visibility of the view or an ancestor of the view is changed.
boolean	setFrame(int l, int t, int r, int b)
为视图指定大小和位置。
boolean	verifyDrawable(Drawable who)
如果你的视图子类显示自己的可绘制对象，他应该重写此方法并为自己的每个可绘制对象返回真.
